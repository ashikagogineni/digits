package digits;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;

public class DigitsGame {
	private int[] sixDigits;
	private int target;
	private ArrayList<Integer> temp = new ArrayList<Integer>();
	
	public DigitsGame(ArrayList<int[]> arr) {
		int[] allNums = arr.get((int)(Math.random()*arr.size()));
		sixDigits = new int[6];
		target = allNums[6];
		for(int i = 0; i<6; i++) {
			sixDigits[i] = allNums[i];
			temp.add(sixDigits[i]);
		}
	}
	
	public void refresh() {
		for(int i = temp.size()-1; i>=0; i--) {
			temp.remove(i);
		}
		for(int i = 0; i<sixDigits.length; i++) {
			temp.add(sixDigits[i]);
		}
	}
	
	public String listToString(ArrayList<Integer> arr) {
		String s = "";
		for(int n: arr) {
			s+= n +", ";
		}
		return s.substring(0, s.length()-2);
	}
	
	public void playGame() {
		Scanner scan = new Scanner(System.in);
	    System.out.println("Welcome to digits! \nUse the digits provided (" + listToString(temp) + ") to get to the target number " + target + "!");
	    int attempt = parseExpression();
	    
	    while (attempt != target) {
	    	if(attempt == -1) {
	    		refresh();
	    		System.out.println("Resetting or your expression returned an invalid (negative or not an integer) value. Try again.");
	    	}else {
	    		temp.add(attempt);
	    	}
	    	System.out.println("Board: (" + listToString(temp) + ") Target value: " + target);
			attempt = parseExpression();
	    }
	    System.out.println("TARGET NUMBER REACHED!");
	    System.out.println("YAY! You did it! 8P!");
	}


	
	public int parseExpression() {
		Scanner scan = new Scanner(System.in);
		boolean valid = false;
		boolean valid2 = false;
		int secondNum = 0;
		String symbol = "";
		
		System.out.println("Enter first digit (" + listToString(temp) + ") or -1 to reset:");
		int firstNum = scan.nextInt();
		if(firstNum == -1) {
			return -1;
		}
		
		for(int i = 0; i<temp.size(); i++) {
			if(temp.get(i) == firstNum) {
				valid = true;
				temp.remove(i);
				break;
			}
		}
		if(valid){
			System.out.println("Enter symbol (+,-,*,/): ");
			symbol = scan.next();
			if(!symbol.equals("+") && !symbol.equals("-") && !symbol.equals("*") && !symbol.equals("/")) {
				System.out.println("Enter VALID symbol (+,-,*,/): ");
				symbol = scan.next();
			}
			System.out.println("Enter second digit (" + listToString(temp) + ") :");
			secondNum = scan.nextInt();
			for(int i = 0; i<temp.size(); i++) {
				if(temp.get(i) == secondNum) {
					valid2 = true;
					temp.remove(i);
					break;
				}
			}
			if(!valid2) {
				System.out.println("Enter VALID second digit (" + listToString(temp) + ") :");
				secondNum = scan.nextInt();
			}
		}
		else {
			System.out.println("Enter VALID first digit (" + listToString(temp) + ") :");
			firstNum = scan.nextInt();
		}
		
	    
	    if (symbol.equals("+")) {
	        return firstNum + secondNum;
	    } else if (symbol.equals("-")) {
	        if (firstNum < secondNum) {
	        	return -1; // Marking as invalid
	        } else {
	        	return firstNum - secondNum;
	        }
	    } else if (symbol.equals("*")) {
	    	return firstNum * secondNum;
	    } else if (symbol.equals("/") && firstNum % secondNum == 0 && secondNum != 0) {
	    	return firstNum / secondNum;
	    } 
	    return -1;
	}

	
	public static ArrayList<int[]> processFile(String filename) {
        ArrayList<int[]> arrays = new ArrayList<int[]>();

        try {
            // Create a Scanner to read from the file
            Scanner scanner = new Scanner(new File(filename));

            // Process each line until the end of the file
            while (scanner.hasNextLine()) {
                // Read one line from the file
                String line = scanner.nextLine();

                // Split the line into individual components
                String[] components = line.split(",");

                // Convert components to integers and store in an array
                int[] values = new int[components.length];
                for (int i = 0; i < components.length; i++) {
                    values[i] = Integer.parseInt(components[i].trim());
                }

                // Add the array to the collection
                arrays.add(values);
          
            }

            // Close the scanner
            scanner.close();
            
        } catch (Exception e) {
           return null;
        }

        return arrays;
    }
	
	public static void main(String[] args) {
		ArrayList<int[]> arr = processFile("digits archive");
		DigitsGame d = new DigitsGame(arr);
		d.playGame();
	}
}
